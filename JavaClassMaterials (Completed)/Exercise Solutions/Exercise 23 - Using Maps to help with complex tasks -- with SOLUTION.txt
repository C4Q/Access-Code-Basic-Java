/*

Exercise 23: Using Maps to help with complex tasks

Use the input from Example 13, create a TreeMap that consists of entries that have Strings keys, and integer values.

Read each word in from the input document.  If it is the first time encountered, add it to the TreeMap with the key 
being that word and a value of 0.  If it has been encountered before, increase the value by 1.  


After completing this TreeMap, display the full map in an organized way (using Iterator).
Display how many times the most repeated word occurs.  

Is there an easy way to display this word?  In other words, can the key associated with this value be printed to console?


*/


			
import java.io.File;
import java.util.*;

public class Exer23 {


	public static void main(String[] args) {
		
		try{
			File infile = new File ("input23.txt");
			Scanner input = new Scanner(infile);
			
			SortedMap <String, Integer> map = new TreeMap <String, Integer>();
			
			while (input.hasNext() ){
				String word = input.next();
				if (map.containsKey(word) ){
					int amount = map.get(word) +1;
					map.put(word, amount);
				}
				else 
					map.put(word, 1);
			}
			
			Iterator<String> iterator = map.keySet().iterator();

			int max = 0;
			
			while ( iterator.hasNext() )
			{
				String key = iterator.next();
				int value = map.get(key);
				System.out.println("word: " + key +"          number of times word appeared: " + value );
				if (value > max) max = value;
			}

			System.out.println();
			
			System.out.println("The word that appears most appears " + max + " times.");
			
			//there is no easy way to display the key associated with this value, this 
			//is a failing of the map structure.  However, we can find it with teh following:  
			
			Iterator <Integer> iterator2 = map.values().iterator();
			
			int max2 = 0;
			int counter = 0;
			int maxIndex = 0;
			
			while ( iterator2.hasNext() )
			{
				int val  = iterator2.next();
				
				if (val > max2) {
					max2 = val;
					maxIndex = counter;
				}
				counter++;
			}
			
			Iterator <String> iterator3 = map.keySet().iterator();
			
			String mostOften = "";
			for (int i =0; i<= maxIndex; i++)
				mostOften = iterator3.next();
			
			System.out.println("The word that appears most is '" + mostOften + "'.  It appears " + max + " times.");
		}
			
		catch(Exception e){
			System.out.println(e);
		}
	}

}

