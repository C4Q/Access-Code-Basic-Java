/*

Exercise 28: Recursion with an array

Insert the following array of numbers into a class:

int[] arr = {3,5,9,4,10,33,12,19,4,15,23,30};

insert statements to call the recursive methods below and print the results from each:



Write and run the following recursive methods from within main:


public static int largest(int[] myArray, int index) {
//The largest number in the array is the larger of the first number in the array, and 
//the largest number in the rest of the array.
}


public static int sum (int[] myArray, int index) {
//The sum of the numbers in the array is the first number plus the sum of the rest of the  
//numbers in the array.

}


public static Boolean isSorted(int[] myArray, int index) {
//The array is sorted if the first number in the array is less than or equal to the second
//number in the array, and the rest of the array is sorted.

}


public static void print( int[] myArray) {
//Write a recursive method which prints the values of each int in the list from 
//first to last. 
}


public static void printReverse( int[] myArray) {
//Write a recursive method which prints the values of each int in the list from 
//last to first. 
}


public static int evenSum(int [] myArray, int index) {
//Write a recursive method which finds the sum of all the even ints in the list. 
}


public static int primeSum(int [] myArray, int index) {
//Write a recursive method which finds the sum of only the primes in the list.
}

*/



import java.util.*;

public class RecursionTest1 {

		private static int largest(int[] arr, int n) {
		    if (arr.length - 1 == n) {
		        return arr[n];
		    } else {
		        return Math.max(arr[n], largest(arr, n + 1));
		    }
		}
		
		private static int sum(int[] arr, int n) {
		    if (arr.length - 1 == n) {
		        return arr[n];
		    } else {
		        return arr[n] + sum(arr, n + 1);
		    }
		}
		
		private static boolean isSorted(int[] arr, int n) {
		    if (arr.length - 2 == n) {
		    	if(arr[n] <= arr[n+1]) return true;
		    	else return false;
		    } 
		    else {
		        if ( arr[n] <= arr[n+1] && isSorted(arr, n+1) )
		        	return true;
		        else return false;
		    }
		}
		
		private static void print (int[] arr) {

			System.out.print(arr[0]);
			
			if (arr.length == 1) 
		        return;
		     
		    else {
		    	System.out.print(", ");
		    	
		    	int[]arr2 = new int [arr.length -1];
		        for (int i = 1; i< arr.length; i++)
		        arr2[i-1] = arr[i];
		    	
		        print(arr2);
		    }
		}

		private static void rPrint (int[] arr) {

			System.out.print(arr[arr.length-1]);

			if (arr.length == 1){ 
				return;
			}

			else {
				System.out.print(", ");

				int[]arr2 = new int [(arr.length -1)];
				for (int i = 0; i< (arr.length-1); i++)
					arr2[i] = arr[i];

		        rPrint(arr2);
		    }
		}
		
		private static int evenSum(int[] arr, int n) {
			if (arr.length - 1 == n) {
				if (arr[n]%2 == 0 ) return arr[n];
				else return 0;
			} 
			else {
				if (arr[n]%2 == 0 ) return arr[n] + evenSum(arr, n + 1);
				else return evenSum(arr, n+1);
			}
		}

		
		private static int primeSum(int[] arr, int n) {
			if (arr.length - 1 == n) {
				if ( isPrime(arr[n]) ) return arr[n];
				else return 0;
			} 
			else {
				if ( isPrime(arr[n]) ) return arr[n] + primeSum(arr, n + 1);
				else return primeSum(arr, n+1);
			}
		}
		

		private static boolean isPrime(int x) {
			
			for (int i = 2; i < (x/2); i++ ) 
				if (x%i == 0) return false;
			return true;
			
		}
		
		
		
		public static void main(String[] args) {
			
			int[] arr = {36,5,90,14,103,393,12,91,44,15,123,30};
//			int [] arr = {1, 2, 3, 4, 5, 6, 7 };

			int large = largest(arr, 0);
			System.out.println("The largest value in the array is: " + large);
			
			int sum = sum(arr, 0);
			System.out.println("The sum of the values in the array is: " + sum);
			
			boolean sorted = isSorted(arr, 0);
			System.out.println("The array is sorted: " + sorted);
			
			System.out.println();
			
			print(arr);
			System.out.println();
			rPrint(arr);
			System.out.println();
			System.out.println();
			
			int evenSum = evenSum(arr, 0);
			System.out.println("The sum of the even values in the array is: " + evenSum);
			
			int primeSum = primeSum(arr, 0);
			System.out.println("The sum of the prime values in the array is: " + primeSum);
			
		}
	}

			

