/*

E35: Search and Sort Methods

The following contains the Search and Sort methods discussed in class:



*/

public int linearSearch (int [] number, int value){
	int loc = 0;

	while (loc < number.length && number[loc]!=value ) 
		loc++;

	if (loc == number.length) return -1;
	else return loc;
}


public int binarySearch (int[] number, int value){
	int low =0, high = number.length -1, mid = (low+high)/2;

	while (low <= high && number[mid] != value) {
		if (number[mid] < value ) low = mid+1;
		else high = mid -1;
		mid = (low+high)/2;
	}
	
	If (low > high) mid = -1;
	return mid;
}

public void selectionSort( int[] number) 
{
	int minInd, length, temp;
	length = number.length;

	for (int startInd = 0; startInd <= length-2; startInd++) {
		minInd = startInd;
		for(int i = startInd+1; i <- length-1; i++){
			if(number[i] < number[minInd]) minInd = I;
		}
		temp = number[startInd];
		number[startInd] = number [minInd];
		number[minInd] = temp;
	}
}

public void bubbleSort ( int[] number) {
	int temp, bottom;
	boolean exchanged = true;
	bottom = number.length -2;
	while (exchanged) {
		exchanged = false;
		for (int i = 0; i <= bottom; i++) {
			if  (number[i] > number[i+1]) {
				temp = number[i];
				number[i] = number [i+1];
				number[i+1] = temp;
				exchanged = true;
			}
		}
		bottom--;
	}
}	
