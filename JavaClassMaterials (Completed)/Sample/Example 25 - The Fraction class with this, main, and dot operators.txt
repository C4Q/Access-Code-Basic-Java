/*

Example 25: The Fraction Class

Below is code for the class Fraction.  It contains several constructors, toString, arithmatic operators, and a
main function.  
 
Observe how the 'this' keyword works, and see what methods run with the dot operator and what methods run without it.


*/


public class Fraction {

	private int numerator;
	private int denominator;
	
	public Fraction()
	{
		numerator = 0;
		denominator = 1;
	}
	
	public Fraction( int num )
	{
		numerator = num;
		denominator = 1;
	}
	
	public Fraction( int num, int denom )
	{
		numerator = num;
		denominator = denom;		
	}
	
	public String toString()
	{
		reduce();
		
		if ( numerator > denominator )
		{
			int num = numerator / denominator;
			int rem = numerator % denominator;
			return num + " " + rem + "/" + denominator;
		}
		else
			return this.numerator + "/" + this.denominator;
		//+ "=" + ((double)numerator)/denominator;
	}
	
	public Fraction add( Fraction frac )
	{
		Fraction answer = new Fraction();
		
		answer.numerator = 
			this.numerator * frac.denominator + 
			frac.numerator * this.denominator;
		
		answer.denominator = this.denominator * frac.denominator;
		
		return answer;
	}

	public Fraction subtract( Fraction frac )
	{
		Fraction ans = new Fraction();
		
		ans.numerator = 
			this.numerator * frac.denominator - 
			frac.numerator * this.denominator;
		
		ans.denominator = this.denominator * frac.denominator;

		
		return ans;
	}

	public Fraction mul( Fraction f )
	{
		Fraction ans = new Fraction();
		
		ans.numerator = this.numerator * f.numerator;
		ans.denominator = this.denominator * f.denominator;
		
		return ans;
	}
	
	public Fraction div( Fraction f )
	{
		Fraction ans = new Fraction();
		
		ans.numerator = this.numerator * f.denominator;
		ans.denominator = this.denominator * f.numerator;
		
		return ans;
	}
	
	
	public void reduce()
	{
		int factor = gcd( this.numerator, this.denominator );
		
		this.numerator = this.numerator / factor;
		this.denominator = this.denominator / factor;
	}
	
	private int gcd( int x, int y )
	{
	   if ( y == 0 ) return x;
	   return gcd( y, x % y );
	}
	
	public static void main(String[] args) {

		Fraction f4 = new Fraction( 5, 7 );
		Fraction f5 = new Fraction( 3, 25 );
		System.out.println( "multiply: " + f4.mul(f5) );
		
		System.out.println( "divide: " + f4.div(f5) );
		
		
		/*
		
		Fraction f2 = new Fraction( 1, 3 );
		Fraction f3 = new Fraction( 3, 4 );
		
		System.out.println("f2: " + f2);
		System.out.println("f3: " + f3);
		
		Fraction ans;
		ans = f2.add(f3);
		ans.reduce();
		
		System.out.println(f2 + " + " + f3 + " = " + ans);
		
		Fraction ans2 = ans.add(f2.subtract(f3));
		
		System.out.println(" -> " + ans2 );
		ans2.reduce();
		System.out.println(" -> " + ans2 );
		
		*/
	}

}